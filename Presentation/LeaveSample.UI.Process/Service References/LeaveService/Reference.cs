//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LeaveSample.UI.Process.LeaveService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LeaveService.ILeaveService")]
    public interface ILeaveService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeaveService/ListLogsByLeave", ReplyAction="http://tempuri.org/ILeaveService/ListLogsByLeaveResponse")]
        System.Collections.Generic.List<LeaveSample.Entities.LeaveStatusLog> ListLogsByLeave(long leaveID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeaveService/ListLogsByLeave", ReplyAction="http://tempuri.org/ILeaveService/ListLogsByLeaveResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<LeaveSample.Entities.LeaveStatusLog>> ListLogsByLeaveAsync(long leaveID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeaveService/GetLeaveById", ReplyAction="http://tempuri.org/ILeaveService/GetLeaveByIdResponse")]
        LeaveSample.Entities.Leave GetLeaveById(long leaveID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeaveService/GetLeaveById", ReplyAction="http://tempuri.org/ILeaveService/GetLeaveByIdResponse")]
        System.Threading.Tasks.Task<LeaveSample.Entities.Leave> GetLeaveByIdAsync(long leaveID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeaveService/ListLeavesByEmployee", ReplyAction="http://tempuri.org/ILeaveService/ListLeavesByEmployeeResponse")]
        LeaveSample.UI.Process.LeaveService.ListLeavesByEmployeeResponse ListLeavesByEmployee(LeaveSample.UI.Process.LeaveService.ListLeavesByEmployeeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeaveService/ListLeavesByEmployee", ReplyAction="http://tempuri.org/ILeaveService/ListLeavesByEmployeeResponse")]
        System.Threading.Tasks.Task<LeaveSample.UI.Process.LeaveService.ListLeavesByEmployeeResponse> ListLeavesByEmployeeAsync(LeaveSample.UI.Process.LeaveService.ListLeavesByEmployeeRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListLeavesByEmployee", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ListLeavesByEmployeeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int maximumRows;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int startRowIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string sortExpression;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string employee;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public System.Nullable<LeaveSample.Entities.LeaveCategories> category;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public System.Nullable<LeaveSample.Entities.LeaveStatuses> status;
        
        public ListLeavesByEmployeeRequest() {
        }
        
        public ListLeavesByEmployeeRequest(int maximumRows, int startRowIndex, string sortExpression, string employee, System.Nullable<LeaveSample.Entities.LeaveCategories> category, System.Nullable<LeaveSample.Entities.LeaveStatuses> status) {
            this.maximumRows = maximumRows;
            this.startRowIndex = startRowIndex;
            this.sortExpression = sortExpression;
            this.employee = employee;
            this.category = category;
            this.status = status;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListLeavesByEmployeeResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ListLeavesByEmployeeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.Collections.Generic.List<LeaveSample.Entities.Leave> ListLeavesByEmployeeResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int totalRowCount;
        
        public ListLeavesByEmployeeResponse() {
        }
        
        public ListLeavesByEmployeeResponse(System.Collections.Generic.List<LeaveSample.Entities.Leave> ListLeavesByEmployeeResult, int totalRowCount) {
            this.ListLeavesByEmployeeResult = ListLeavesByEmployeeResult;
            this.totalRowCount = totalRowCount;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILeaveServiceChannel : LeaveSample.UI.Process.LeaveService.ILeaveService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LeaveServiceClient : System.ServiceModel.ClientBase<LeaveSample.UI.Process.LeaveService.ILeaveService>, LeaveSample.UI.Process.LeaveService.ILeaveService {
        
        public LeaveServiceClient() {
        }
        
        public LeaveServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LeaveServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LeaveServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LeaveServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<LeaveSample.Entities.LeaveStatusLog> ListLogsByLeave(long leaveID) {
            return base.Channel.ListLogsByLeave(leaveID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<LeaveSample.Entities.LeaveStatusLog>> ListLogsByLeaveAsync(long leaveID) {
            return base.Channel.ListLogsByLeaveAsync(leaveID);
        }
        
        public LeaveSample.Entities.Leave GetLeaveById(long leaveID) {
            return base.Channel.GetLeaveById(leaveID);
        }
        
        public System.Threading.Tasks.Task<LeaveSample.Entities.Leave> GetLeaveByIdAsync(long leaveID) {
            return base.Channel.GetLeaveByIdAsync(leaveID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LeaveSample.UI.Process.LeaveService.ListLeavesByEmployeeResponse LeaveSample.UI.Process.LeaveService.ILeaveService.ListLeavesByEmployee(LeaveSample.UI.Process.LeaveService.ListLeavesByEmployeeRequest request) {
            return base.Channel.ListLeavesByEmployee(request);
        }
        
        public System.Collections.Generic.List<LeaveSample.Entities.Leave> ListLeavesByEmployee(int maximumRows, int startRowIndex, string sortExpression, string employee, System.Nullable<LeaveSample.Entities.LeaveCategories> category, System.Nullable<LeaveSample.Entities.LeaveStatuses> status, out int totalRowCount) {
            LeaveSample.UI.Process.LeaveService.ListLeavesByEmployeeRequest inValue = new LeaveSample.UI.Process.LeaveService.ListLeavesByEmployeeRequest();
            inValue.maximumRows = maximumRows;
            inValue.startRowIndex = startRowIndex;
            inValue.sortExpression = sortExpression;
            inValue.employee = employee;
            inValue.category = category;
            inValue.status = status;
            LeaveSample.UI.Process.LeaveService.ListLeavesByEmployeeResponse retVal = ((LeaveSample.UI.Process.LeaveService.ILeaveService)(this)).ListLeavesByEmployee(inValue);
            totalRowCount = retVal.totalRowCount;
            return retVal.ListLeavesByEmployeeResult;
        }
        
        public System.Threading.Tasks.Task<LeaveSample.UI.Process.LeaveService.ListLeavesByEmployeeResponse> ListLeavesByEmployeeAsync(LeaveSample.UI.Process.LeaveService.ListLeavesByEmployeeRequest request) {
            return base.Channel.ListLeavesByEmployeeAsync(request);
        }
    }
}
