//====================================================================================================
// Base code generated with Velocity: SL Gen (Build 2.4.4841.16573)
// Layered Architecture Solution Guidance (http://layerguidance.codeplex.com)
//
// Generated by Serena Yeoh at ALIENWARE on 05/09/2013 14:49:48 
//====================================================================================================

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ServiceModel;
using LeaveSample.Business;
using LeaveSample.Entities;
using LeaveSample.Services.Contracts;

// NOTE:
//
// Service components are responsible for exposing business methods that are
// required to be consumable by external callers as services. This sample uses
// the Business Entities as the data contracts. In larger systems, you may need
// to develop Message Types (Message Contracts) to expose the data.

namespace LeaveSample.Services
{
    /// <summary>
    /// Leave service component.
    /// </summary>
    [ServiceBehavior(InstanceContextMode = InstanceContextMode.PerCall, ConcurrencyMode = ConcurrencyMode.Multiple)]
    public class LeaveService : ILeaveService
    {

        /// <summary>
        /// Calls the ListLogsByLeave business method of the LeaveComponent.
        /// </summary>
        /// <param name="leaveID"> A leaveID value.</param>
        /// <returns>Returns a List<LeaveStatusLog> object.</returns>
        public List<LeaveStatusLog> ListLogsByLeave(long leaveID)
        {
            LeaveComponent bc = new LeaveComponent();
            return bc.ListLogsByLeave(leaveID);
        }

        /// <summary>
        /// Calls the GetLeaveById business method of the LeaveComponent.
        /// </summary>
        /// <param name="leaveID"> A leaveID value.</param>
        /// <returns>Returns a Leave object.</returns>
        public Leave GetLeaveById(long leaveID)
        {
            LeaveComponent bc = new LeaveComponent();
            return bc.GetLeaveById(leaveID);
        }

        /// <summary>
        /// Calls the ListLeavesByEmployee business method of the LeaveComponent.
        /// </summary>
        /// <param name="maximumRows"> A maximumRows value.</param>
        /// <param name="startRowIndex"> A startRowIndex value.</param>
        /// <param name="sortExpression"> A sortExpression value.</param>
        /// <param name="employee"> A employee value.</param>
        /// <param name="category"> A category value.</param>
        /// <param name="status"> A status value.</param>
        /// <param name="int"> A int value.</param>
        /// <returns>Returns a List<Leave> object.</returns>
        public List<Leave> ListLeavesByEmployee(int maximumRows, int startRowIndex, 
            string sortExpression, string employee, LeaveCategories? category, 
            LeaveStatuses? status, out int totalRowCount)
        {
            LeaveComponent bc = new LeaveComponent();
            return bc.ListLeavesByEmployee(maximumRows, startRowIndex, sortExpression, 
                employee, category, status, out totalRowCount);
        }
    }
}
